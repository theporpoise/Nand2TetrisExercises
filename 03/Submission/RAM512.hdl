// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Generating the load or no load value for each RAM64
    DMux8Way(in=load ,sel=address[6..8] ,a=d0 ,b=d1 ,c=d2 ,d=d3 ,e=d4 ,f=d5 ,g=d6 ,h=d7 );

    // Building on previous chip, the dmux value is fed into one of 8
    // RAM chips and those chips take the register put value address[0..5]
    // and use their own internal logic to select the correct register
    RAM64(in=in ,load=d0 ,address=address[0..5] ,out=m0 );
    RAM64(in=in ,load=d1 ,address=address[0..5] ,out=m1 );
    RAM64(in=in ,load=d2 ,address=address[0..5] ,out=m2 );
    RAM64(in=in ,load=d3 ,address=address[0..5] ,out=m3 );
    RAM64(in=in ,load=d4 ,address=address[0..5] ,out=m4 );
    RAM64(in=in ,load=d5 ,address=address[0..5] ,out=m5 );
    RAM64(in=in ,load=d6 ,address=address[0..5] ,out=m6 );
    RAM64(in=in ,load=d7 ,address=address[0..5] ,out=m7 ); 

    //Selects which output using the msb.
    Mux8Way16(a=m0 ,b=m1 ,c=m2 ,d=m3 ,e=m4 ,f=m5 ,g=m6 ,h=m7 ,sel=address[6..8] ,out=out );
}