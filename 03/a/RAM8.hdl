// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // Takes the input and gives a binary yes/no for if the computer
    // should put the input at that address.  it's generating the 
    // load yes/no value for each register
    DMux8Way(in=load ,sel=address ,a=aout ,b=bout ,c=cout ,d=dout ,e=eout ,f=fout ,g=gout ,h=hout ); 

    Register(in=in ,load=aout ,out=m1 );
    Register(in=in ,load=bout ,out=m2 );
    Register(in=in ,load=cout ,out=m3 );
    Register(in=in ,load=dout ,out=m4 );
    Register(in=in ,load=eout ,out=m5 );
    Register(in=in ,load=fout ,out=m6 );
    Register(in=in ,load=gout ,out=m7 );
    Register(in=in ,load=hout ,out=m8 );

    Mux8Way16(a=m1 ,b=m2 ,c=m3 ,d=m4 ,e=m5 ,f=m6 ,g=m7 ,h=m8 ,sel=address ,out=out ); 





}